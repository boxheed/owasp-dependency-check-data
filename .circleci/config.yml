# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

vars: &globals
  IMAGE_NAME: boxheed/openjdk-17-nvd-cve-db

jobs:
  update-cache:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: git config user.name fizzpod-machine-user
      - run: git config user.email fizzpod-machine-user@users.noreply.github.com
      - run: mkdir -p ./bin && curl -L https://github.com/jeremylong/Open-Vulnerability-Project/releases/download/v5.1.0/vulnz-5.1.0.jar --output ./bin/vulnz.jar
      - run: java -jar ./bin/vulnz.jar cve --cache --directory ./nvdcve-data --debug
      - run: version=$(date +'%Y.%m.%d') && git add -A && git commit -m "$version CVE NVD Data Updated [skip ci]" && git tag "$version" 
      - run: version=$(date +'%Y.%m.%d') && git push --atomic --set-upstream origin $CIRCLE_BRANCH $version
      
  build-database:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: echo "publish"
      - run: mkdir -p ./build/db
      - run: curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.4/dependency-check-9.0.4-release.zip --output ./build/dependency-check.zip
      - run: cd ./build && unzip dependency-check.zip && cd ..
      - run: ./build/dependency-check/bin/dependency-check.sh --updateonly --nvdDatafeed file://$PWD/nvdcve-data/nvdcve-{0}.json.gz --data ./build/db
      - save_cache:
          key: v1-{{ .Revision }}
          paths:
            - build

  publish-container:
    docker:
      - image: docker:24.0.2-git
    #working_directory: ~/repo
    environment: *globals
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Revision }}
          destination:
            - /root/project
#          paths:
#            - ./build/db
      - run: cp -r /home/circleci/project/build .
      - run: whoami && echo "$HOME" && pwd && ls -altr 
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build \
              -t $IMAGE_NAME:$CIRCLE_TAG \
              -t $IMAGE_NAME:latest \
              .
#      - run:
#          name: Publish Docker Image to Docker Hub
#          command: |
#            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
#            docker push $IMAGE_NAME -a

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - update-cache:
          context: boxhead-builds
          filters:
            branches:
              only: /^(?:main|master)$/
      - build-database:
          context: boxhead-builds
          filters:
            # only act on version tags
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-container:
          context: boxhead-builds
          requires: 
            - build-database
          filters:
            # only act on version tags
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
